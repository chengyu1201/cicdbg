# path: cloudbuild.yaml
# 說明：
# - 這份會：Build → Push → 自動判斷下一個顏色(blue/green) → 以 0% 流量部署新修訂並加上對應 tag
# - 最後的「切 100% 流量」步驟預設關閉（你先用 Console 驗證後再切）。
#   想自動切，打開最底下被註解的步驟即可。

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  # >>> 只要改以下三個成你的環境（我已幫你放好目前值） <<<
  _REGION: asia-east1
  _AR_REPO: cicd-bluegreen-docker
  _SERVICE: cicdbg
  _NEXT_TAG: ""

  # 若你將來換自訂的 runtime SA，再改這個；目前用 Compute Default SA 即可
  _RUNTIME_SA: projects/$PROJECT_NUMBER/serviceAccounts/$PROJECT_NUMBER-compute@developer.gserviceaccount.com

steps:
  # 1) Build image
  - name: gcr.io/cloud-builders/docker
    id: build
    args:
      - build
      - -t
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:${SHORT_SHA}
      - .

  # 2) Push image
  - name: gcr.io/cloud-builders/docker
    id: push
    args:
      - push
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:${SHORT_SHA}

  # 3) Decide next color (blue/green)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: decide-color
    entrypoint: bash
    args:
      - -ceu
      - |
        set -euo pipefail
        if [[ -n "${_NEXT_TAG}" ]]; then
          NEXT_TAG="${_NEXT_TAG}"
          [[ "$NEXT_TAG" == "blue" || "$NEXT_TAG" == "green" ]] || { echo "invalid _NEXT_TAG=$NEXT_TAG"; exit 1; }
        else
          CURR="$(gcloud run services describe "${_SERVICE}" --region "${_REGION}" --format='value(status.traffic[0].tag)' || true)"
          if [[ "${CURR:-blue}" == "blue" ]]; then NEXT_TAG=green; else NEXT_TAG=blue; fi
        fi
        echo "NEXT_TAG=$NEXT_TAG" | tee /workspace/next_color

  # 4) Deploy new revision tagged as NEXT_TAG with NO traffic (0%)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: deploy-no-traffic
    entrypoint: bash
    args:
      - -ceu
      - |
        set -euo pipefail
        source /workspace/next_color
        IMAGE="${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:${SHORT_SHA}"
        echo "Deploying image: $IMAGE with tag: $NEXT_TAG (no traffic)"
        gcloud run deploy "${_SERVICE}" \
          --image "${IMAGE}" \
          --region "${_REGION}" \
          --tag "${NEXT_TAG}" \
          --no-traffic \
          --service-account "${_RUNTIME_SA}" \
          --set-env-vars=APP_VERSION="${SHORT_SHA}",APP_COLOR="${NEXT_TAG}"

  # 5) （可選）在這裡做 smoke test（建議你先到 Console 用 tag URL 測 /healthz）
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: hint
    entrypoint: bash
    args:
      - -ceu
      - |
        source /workspace/next_color
        echo "Deployed ${_SERVICE} new revision with tag=${NEXT_TAG} at 0%."
        echo "請到 Cloud Run > ${_SERVICE} > Revisions > Tags 複製 ${NEXT_TAG} 的 tag URL 測試 /healthz。"
        echo "測試通過後，再用 Manage traffic 把 ${NEXT_TAG}=100%（或做金絲雀 1%、5% ...）"

  # 6) 需要「建置完成自動切 100% 流量」→ 取消下面註解
  # - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
  #   id: promote-to-100
  #   entrypoint: bash
  #   args:
  #     - -ceu
  #     - |
  #       set -euo pipefail
  #       source /workspace/next_color
  #       gcloud run services update-traffic "${_SERVICE}" \
  #         --region "${_REGION}" \
  #         --to-tags "${NEXT_TAG}=100"
  #       echo "Traffic switched to ${NEXT_TAG}=100%"

images:
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:${SHORT_SHA}
